exit all
configure

#--------------------------------------------------
echo "System Configuration"
#--------------------------------------------------
    system
        name {{ inventory_hostname }}
        time
          ntp
            {% for ntp_server in ntp_servers %}
            server {{ ntp_server }}
            {% endfor %}
            no shutdown
          exit
        exit
    exit
#--------------------------------------------------
echo "Virtual Switch Controller Configuration"
#--------------------------------------------------
    vswitch-controller
        xmpp-server "{{ xmpp.username }}:{{ xmpp.password }}@{{ vsd_fqdn }}"
        open-flow
        exit
        xmpp
        exit
    exit

#--------------------------------------------------
echo "Router (Network Side) Configuration"
#--------------------------------------------------
    router
        interface "control"
            {% if interfaces.control.ip is defined and interfaces.control.netmask_prefix is defined %}
            address {{ interfaces.control.ip }}/{{ interfaces.control.netmask_prefix }}
            no shutdown
            {% endif %}
        exit
        interface "system"
            {% if system_ip is defined %}
            address {{ system_ip }}/32
            no shutdown
            {% endif %}
        exit
        {% if as_number %}
        autonomous-system {{ as_number }}
        {% endif %}
        {% if system_ip is defined %}
        router-id {{ system_ip }}
        {% endif %}
        {% for vsc_item in list_of_vscs %}
          {% if vsc_item != inventory_hostname %}
            {% if hostvars[vsc_item].system_ip != system_ip %}
        static-route {{ hostvars[vsc_item].system_ip }}/32 next-hop {{ hostvars[vsc_item].interfaces.control.ip }}
            {% endif %}
          {% endif %}
        {% endfor %}

        {% if routing_to_underlay is defined %}
        policy-options
            begin
            prefix-list "vm"
               {% for overlay_net in list_of_overlay_nets %}
                  prefix {{ overlay_net }} longer
               {% endfor %}
            exit
            {% if system_ip is defined %}
            prefix-list "system"
                prefix {{ system_ip }}/32 exact
            exit 
            {% endif %}
            prefix-list "0/0"
                prefix 0.0.0.0/0 exact
            exit
            policy-statement "to-bgp"
               entry 10
                 from
                    protocol static
                    prefix-list "vm"
                 exit
                 action accept
                 exit
               exit
               {% if system_ip is defined %}
               entry 20
                 from
                    prefix-list "system"
                 exit
                 action accept
                 exit
               exit
               {% endif %}
            exit
            policy-statement "default"
                entry 10
                    from
                        prefix-list "0/0"
                    exit
                    action accept
                    exit
                exit
                entry 20
                    action reject
                exit
            exit
            commit
        exit 
        {% endif %}
        bgp
          connect-retry 2
          min-route-advertisement 1
          outbound-route-filtering
            extended-community
              send-orf
            exit
          exit
          {% if routing_to_underlay is defined %}
          rapid-withdrawal
          rapid-update l2-vpn mvpn-ipv4 mdt-safi evpn
          next-hop-resolution
                use-bgp-routes
          exit
          group "underlay-peers"
            family ipv4
            import "default"
            export "to-bgp"
            local-address {{ interfaces.control.ip }}
            {% for peer in peer_list %}
              neighbor {{ peer.ip }}
                local-as {{ peer.as }}
                peer-as {{ peer.as }}
              exit
            {% endfor %}
          exit
          {% endif %}
          
         group "internal"
            type internal
              {% for vsc_item in list_of_vscs %}
                {% if vsc_item != inventory_hostname %}
                  {% if hostvars[vsc_item].system_ip != system_ip %}
              neighbor {{ hostvars[vsc_item].system_ip }}
              exit
                  {% endif %}
                {% endif %}
              {% endfor %}
              family evpn
            exit
          exit
        exit
    exit

exit all
